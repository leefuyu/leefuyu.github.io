<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>封装自己的Ajax请求</title>
      <link href="/blog/%E5%B0%81%E8%A3%85%E8%87%AA%E5%B7%B1%E7%9A%84Ajax%E8%AF%B7%E6%B1%82/"/>
      <url>/blog/%E5%B0%81%E8%A3%85%E8%87%AA%E5%B7%B1%E7%9A%84Ajax%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ol><li><p>创建一个函数，函数的形参将变化的数据，当做形参放入函数</p></li><li><ol><li>注意：放入函数中的形参，是结构出来的</li></ol></li></ol><ul><li><img src="https://cdn.nlark.com/yuque/0/2022/png/26340118/1668645486566-2c8924ae-e775-43a0-a6dd-d476c3d317df.png" alt="img"></li></ul><ol><li>在函数内创建new Prmise实例对象，并将其return</li></ol><ul><li><img src="https://cdn.nlark.com/yuque/0/2022/png/26340118/1668645503597-fa24710c-d61c-44b7-bf49-b56e74e3f056.png" alt="img"></li></ul><ol><li>在promise对象中创建 xhr ，使用.open() .send() load() 的方法进行请求和监听</li></ol><ul><li><img src="https://cdn.nlark.com/yuque/0/2022/png/26340118/1668645534683-488f8789-027d-4684-9951-9ae33c9f1f35.png" alt="img"></li></ul><ol><li>在.open() 中添加函数对应的请求方法和url</li></ol><ul><li><img src="https://cdn.nlark.com/yuque/0/2022/png/26340118/1668645604309-0f49cd21-33e7-4f0d-a14c-db8b77e38b2c.png" alt="img"></li></ul><ol><li>load事件获取接口返回的数据，是JSON字符串的格式，需要将数据转为JS数据，使用JSON.parse</li></ol><ul><li><img src="https://cdn.nlark.com/yuque/0/2022/png/26340118/1668645939304-97ade74f-21af-4101-942a-233ef33a1c90.png" alt="img"></li></ul><ol><li>创建error事件用来捕获错误，同时给出提示</li></ol><ul><li><img src="https://cdn.nlark.com/yuque/0/2022/png/26340118/1668645950919-49e0c58f-dc6c-4329-8b7b-90185fa8dafc.png" alt="img"></li></ul><ol><li>判断传入的params是否有参数，如果有参数就循环遍历里面的所有的 键和值，并且进行拼接成字符串(注意点：判断需要放在.open()的上面，因为判断之后才放入url)</li></ol><ul><li><img src="https://cdn.nlark.com/yuque/0/2022/png/26340118/1668645923079-ff6e1a4b-1783-4673-949b-db1057fe6b0d.png" alt="img"></li></ul><ol><li>判断是否有post请求并且data有数据，根据数据类型的不同设置对应的编码格式</li></ol><ul><li><img src="https://cdn.nlark.com/yuque/0/2022/png/26340118/1668646192037-315206b4-5030-4dd1-b91d-7bb8d3bba865.png" alt="img"></li><li>在判断进行二次判断数据类型</li><li>判断是否是查询字符串，设置xhr.setRequestHeader(‘Content-Type’, ‘application/x-www-form-urlencoded’)。并且传入请求体xhr.send(data)</li><li>判断是否是formdata类型，使用instanceof进行检测，因为formdata数据类型比较特殊，浏览器会帮助我们设置请求数据类型，我们只需要发起请求体即可</li><li>上面判断数据类型都不是的话 就是 对象 数据类型，设置对应的请求格式并且传入的时候要将数据转为JSON格式</li><li><img src="https://cdn.nlark.com/yuque/0/2022/png/26340118/1668646855071-f51125a5-9986-4071-833f-45b2a64be9de.png" alt="img"></li></ul><p>白话解释封装axios请求：</p><p>我们需要将变化的数据放在函数，当做形参传入使用，比如请求方法请求的url和请求的数据，因为我们是原生的封装，所以我们需要用到Promise和XMLHttpRequset，基于这两个浏览器内置的方法进行请求，因为有不同的请求方式，我们需要进行判断，做对应的请求，post请求有很多种数据类型，所以我们还需要判断post请求以及请求的数据数据类型，根据数据类型设置对应的数据编码格式（xhr.setRequestHeader）来进行请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将动态变化的数据 放入函数的形参中   函数中的形参要结构出来</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">itheima</span>(<span class="params">&#123; method, url, params, data &#125;</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 由于我们是原生封装  所以需要使用到 XHR 和 Promise</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建小黄人</span></span><br><span class="line">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest()</span><br><span class="line">    <span class="comment">// 判断params是否有参数  如果有进行循环 拼接成字符串</span></span><br><span class="line">    <span class="keyword">if</span> (params !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> arr = []</span><br><span class="line">      <span class="comment">// 循环数据中的所有键和值 </span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> params) &#123;</span><br><span class="line">        <span class="comment">// 拼接进行保存</span></span><br><span class="line">        arr.push(<span class="string">`<span class="subst">$&#123;key&#125;</span>=<span class="subst">$&#123;params[key]&#125;</span>`</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 拼接到url后面</span></span><br><span class="line">      url += <span class="string">&#x27;?&#x27;</span> + arr.join(<span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(url)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请求方式 和 请求的url</span></span><br><span class="line">    xhr.open(method, url)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// xhr.send()</span></span><br><span class="line">    <span class="comment">// 判断是否有POST请求  并且  data里面有数据</span></span><br><span class="line">    <span class="comment">// 然后根据数据类型做相应的判断,设置对应的数据编码格式</span></span><br><span class="line">    <span class="keyword">if</span> (method.toUpperCase() === <span class="string">&#x27;POST&#x27;</span> &amp;&amp; data !== <span class="literal">undefined</span>) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 判断是否查询字符串</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">typeof</span> data === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment">// 设置请求数据的编码格式</span></span><br><span class="line">        xhr.setRequestHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>)</span><br><span class="line">        xhr.send(data)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// formdata数据</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data <span class="keyword">instanceof</span> FormData) &#123;</span><br><span class="line">        <span class="comment">// formdata数据不需要设置编码格式,浏览器自动帮我们添加</span></span><br><span class="line">        xhr.send(data)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// json数据</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// / 设置请求数据的编码格式</span></span><br><span class="line">        xhr.setRequestHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/json&#x27;</span>)</span><br><span class="line">        <span class="comment">// 请求体</span></span><br><span class="line">        xhr.send(<span class="built_in">JSON</span>.stringify(data))</span><br><span class="line">      &#125;</span><br><span class="line">    </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 否则就是get请求</span></span><br><span class="line">      xhr.send()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听请求成功 load事件是一个异步函数</span></span><br><span class="line">    xhr.addEventListener(<span class="string">&#x27;load&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      resolve(<span class="built_in">JSON</span>.parse(xhr.response))</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听请求失败 error</span></span><br><span class="line">    xhr.addEventListener(<span class="string">&#x27;error&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      reject(<span class="string">&#x27;网络错误, 请求失败&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// get请求</span></span><br><span class="line"><span class="keyword">let</span> btn1 = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#btnGet&#x27;</span>)</span><br><span class="line">btn1.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  itheima(&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://www.liulongbin.top:3009/api/get&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span>,</span><br><span class="line">      <span class="attr">age</span>: <span class="number">20</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res); </span><br><span class="line">  &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    alert(err)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// post请求</span></span><br><span class="line"><span class="keyword">let</span> btn2 = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#btnPost&#x27;</span>)</span><br><span class="line">btn2.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> fd = <span class="keyword">new</span> FormData()</span><br><span class="line">  fd.append(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;zs&#x27;</span>)</span><br><span class="line">  itheima(&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://www.liulongbin.top:3009/api/post&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;ls&#x27;</span>,</span><br><span class="line">      <span class="attr">age</span>: <span class="number">30</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// data: fd</span></span><br><span class="line">    <span class="comment">// data: &#x27;name=zs&amp;age=18&#x27;</span></span><br><span class="line">  &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res);</span><br><span class="line">  &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    alert(err)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ajax </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>浏览器V8</title>
      <link href="/blog/%E6%B5%8F%E8%A7%88%E5%99%A8V8/"/>
      <url>/blog/%E6%B5%8F%E8%A7%88%E5%99%A8V8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="V8引擎"><a href="#V8引擎" class="headerlink" title="V8引擎"></a>V8引擎</h1><h2 id="Chrome的is引-警是v8"><a href="#Chrome的is引-警是v8" class="headerlink" title="Chrome的is引|警是v8"></a>Chrome的is引|警是v8</h2><h2 id="Nodejs的运行环境是v8引擎"><a href="#Nodejs的运行环境是v8引擎" class="headerlink" title="Nodejs的运行环境是v8引擎"></a>Nodejs的运行环境是v8引擎</h2><h2 id="electron的底层引警也是v8"><a href="#electron的底层引警也是v8" class="headerlink" title="electron的底层引警也是v8"></a>electron的底层引警也是v8</h2><h2 id="1-什人是V8引擎"><a href="#1-什人是V8引擎" class="headerlink" title="1. 什人是V8引擎"></a>1. 什人是V8引擎</h2><ul><li>官方:用C++编写的谷歌源高性能is和webAssembly引擎</li><li>白话:是一个接收is代码,编译代码然后执行C++程序，编译后的代码可以在多种操作系统,多种处理器上运行<h2 id="2-v8引擎主要职责"><a href="#2-v8引擎主要职责" class="headerlink" title="2. v8引擎主要职责"></a>2. v8引擎主要职责</h2></li><li>编译和执行JS代码</li><li>处理调用栈</li><li>内存分配</li><li>垃圾回收<h2 id="3-v8是如何编译和执行is代码的"><a href="#3-v8是如何编译和执行is代码的" class="headerlink" title="3. v8是如何编译和执行is代码的"></a>3. v8是如何编译和执行is代码的</h2>大部分is引擎编译和执行代码都需要用到三个重要的组件</li><li>解析器: 负责将js源代码解析成抽象语法树AST</li><li>解释器: 负责将AST解释成字节码bytecode,同时解释器也有直接解释执行bytecode的能力</li><li>编译器: 负责编译出运行更加高效的机器代码<br><strong>早期</strong><br>v8引擎没有解释器,却又两个编译器<br><strong>编译流程:</strong></li><li>先是由解析器机械后，生成AST抽象树</li><li>由编译器Full-codegen直接使用AST来编译出机器代码,不进行任何中间转换</li><li>编译器Crankshaft来做代码优化<br><strong>编译器Full-codegen</strong></li><li>也被称为基准编译器，因为他生成的是一个基准的未被优化的机器代码好处: 当你第一次执行JS的时候,就是使用了高效的机器代码，因为没有中间的字节码产生，所以就不需要解释器<br><strong>编译器Crankshaft</strong><br>也被称为优化编译器当代码运行一段时间后,v8引擎中的分析线程收集里足够的数据来帮助另一个编译器Crankshaft来做代码优化,需要优化的源码,重新解析生成ASTCrankshaft使用生成好的AST在生成优化后的机器代码,来提升运行的一个效率<br>这样的初衷是好的,减少了抽象语法书到字节码的转换时间,提高外部浏览器中is的执行性能<br>但是这样的架构设计也带来了不少问题:</li><li>生成的机器码会占用大量的内存,对于大多数电脑不好,对于星期的安享低内存没备,基本是不能承受的，且有些代码仅仅只执行一次,没有必要直接生成机器码</li><li>缺少中间层的字节码,很多性能优化策略无法实施，导致V8引警性能提升缓慢</li><li>之前的编译器无法很好的支持和优化is的新语法特性，就是无法拥抱未来<br>为了解决以上的问题V8团队用了二年半的时间.开发了一套新的V8架构<br>对于这个架构V8有很高的赞誉:它代表了V8团队通过测量实际的is性能,并仔细研究Fu-codedenCrankshaf的缺点后收集到的共同见解的而峰<br><strong>新架构</strong></li><li>语法树的解析还是保持一致的</li><li>在获得油象语法树后,V8引擎加入了解器lgnition,语法树通过解程器nition生成ytecode字节码,时AST就被清除了,释放内存空生成的bytecode直接被解释器cniton执行,</li><li>同时生成的btecode将作为基准执行模型,字节码更加简洁，生的字节码大小相当于等效的急转机器代码的25%到50%</li><li>在代码不断运行过程中,解释器收集到了很多可以用来优化代码的信息,比如变量的类型，哪些函数执行的频率较高这些信息被发送给编译器,v8 引擎新的编译器Turbofan,会根据这些信息的字节码,来编译出经过优化的机器代码<br>v8在外理is过程中的一些优化策略</li><li>函数只声明,却没有被调用,则该函数不会被解析生成AST,也就不会生成字节码了</li><li>如调一次 则c生字后 直接终黑了行化 因为黑收的型信息,这要至一次 urboa会行</li><li>如果载技调多次,则他有可能会识为热点,当t解经器收集的类信息定这T0则会将字节的为机品,以提高代的行后执行这个数时,就直接行优</li></ul><hr><hr><p><strong>整体来说</strong></p><ul><li>处于一个运行字节码和优化的机器代码共存的状态</li><li>随着is源码不断的被执行，会有更多的源码被标记为热点代码就会产生更多的机器代码</li><li>注意:优化后的机器代码,可能会被逆向还原成字节码,这个过程叫做的deoptimization,这是因为是一个动态语言,会导致lcnition手机到的信息是错误的</li><li>比如: 有个sum函数,在函数声明时,s引警并不知道参数xy是什么类型,但在后面的多次调用中传入的XV都是整形,sum函数被标记为热点函数解释器将收集到的类型信息和改函数对应的字节码发送给编译器,于是编译器生成的优化后的机器代码中就假定了sum函数的参数Xy为整形，之后遇到该函数的调用，就直接运行了更快的机器代码,如果此时你调用sum函数时传入了字符串,机器代码不知道该如何外理字符串参数于是就需要进行deoptimization,也就是回退到字节码,有解释器来解释执行,所以说我们尽量不要把一个变量的类型变来变去,对传入函数的参数的类型,也是最好保持固定,否则会给V8引擎带来一些影响，会损失一定的性能<br>新架构的好处</li><li>由于不需要一开始直接编译成机器码,而是生成了中间层的字节码,字节码的生成速度是远远大于机器码的所以网页初始化解析执行is的时间缩短了网页可以更快的onload</li><li>.在生成优化的机器代码时,不需要充源码重新编译,而是使用字节码,并且当需要deoptimization时,只需要回归到中间层的字书码解释执行就可以了</li><li>新的架构在性能上面带来了很大的提升,并且功能模块的职能也更加清晰了,为未来is的新功能和优化也铺平了道路</li></ul>]]></content>
      
      
      <categories>
          
          <category> 浏览器 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>小程序的生命周期</title>
      <link href="/blog/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
      <url>/blog/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="生命周期：小程序生命周期概要"><a href="#生命周期：小程序生命周期概要" class="headerlink" title="生命周期：小程序生命周期概要"></a>生命周期：小程序生命周期概要</h2><blockquote><p>了解生命周期的作用及小程序生命周期的分类</p></blockquote><p><strong>概念介绍</strong></p><ul><li><strong>生命周期</strong> 是框架代码在运行的过程中会经历的某些<strong>特定时间节点</strong>。</li><li><strong>生命周期钩子函数</strong> 是框架代码运行到特定生命周期时会调用的函数。(<strong>特定时间节点会执行的函数</strong>)</li></ul><p>以小程序为例，小程序框架会按某种特定的流程执行，并允许开发人员编写在特定阶段才会执行的代码，当小程序框架代码运行到这些阶段时，开发人员的代码被随之执行。<br>小程序中有两种生命周期：<strong>应用生命周期、页面生命周期</strong>。</p><hr><h2 id="生命周期：应用的生命周期"><a href="#生命周期：应用的生命周期" class="headerlink" title="生命周期：应用的生命周期"></a>生命周期：应用的生命周期</h2><blockquote><p>监听小程序应用级别的生命周期</p></blockquote><p><strong>操作步骤</strong></p><ol><li>在 app.js 中调用 App 函数来注册应用实例</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">App(&#123;&#125;)</span><br></pre></td></tr></table></figure><ol><li>在 App() 的参数中定义：onLaunch、onShow、onHide  等生命周期钩子函数</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">App(&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 小程序启动时</span></span><br><span class="line">  <span class="attr">onLaunch</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 全局只会触发1次</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;小程序启动了...&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 小程序前台运行时</span></span><br><span class="line">  <span class="attr">onShow</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 重复执行</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;小程序前台运行了...&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 小程序后台运行时</span></span><br><span class="line">  <span class="attr">onHide</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 重复执行</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;小程序后台运行了...&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="生命周期：页面的生命周期"><a href="#生命周期：页面的生命周期" class="headerlink" title="生命周期：页面的生命周期"></a>生命周期：页面的生命周期</h2><blockquote><p>监听小程序页面级别的生命周期</p></blockquote><p><strong>操作步骤</strong></p><ol><li><p>生成一个新页面</p></li><li><p>页面js中的生命周期钩子函数</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 页面加载时触发，只会触发1次</span></span><br><span class="line">  <span class="attr">onLoad</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;当前页面被加载了...&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 当前页面初次渲染完毕时触发，只会触发1次</span></span><br><span class="line">  <span class="attr">onReady</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;当前页面初次渲染完毕了...&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 页面显示时触发（如返回、tabBar切换、前台运行）</span></span><br><span class="line">  <span class="attr">onShow</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;当前页面显示了...&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 页面隐藏时触发（跳转、tabBar切换、后台运行）</span></span><br><span class="line">  <span class="attr">onHide</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;当前页面不见了...&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 页面卸载(微信发现这个小程序很久没用了,会自己卸载,一般不用管)</span></span><br><span class="line">  <span class="attr">onUnload</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="生命周期：通过生命周期获取场景值"><a href="#生命周期：通过生命周期获取场景值" class="headerlink" title="生命周期：通过生命周期获取场景值"></a>生命周期：通过生命周期获取场景值</h2><blockquote><p>获知用户是通过什么途经进入到我们的小程序中</p></blockquote><p><strong>概念介绍</strong></p><p>打开小程序的方式多种多样，比如扫码、转发、搜索、公众号等。</p><p>通过场景值可以分辨出用户是以何种途径打开我们的小程序的。</p><p>场景值的实际作用：</p><ol><li>可以在程序中，按照不同的场景值为用户展示不同的界面</li><li>可以用来统计热门入口，帮助改善市场推广的策略，提升推广效率，降低推广成本</li></ol><p><strong>操作步骤</strong></p><ol><li>为 app.js 中的<strong>应用生命周期钩子函数</strong> <code>onLaunch</code> 和 <code>onShow</code> 添加参数，并从参数中获取场景值：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">App(&#123;</span><br><span class="line">  <span class="function"><span class="title">onLaunch</span>(<span class="params">options</span>)</span> &#123;</span><br><span class="line">  <span class="comment">// 根据打开小程序的方式不同 options.scene 的值也不一样</span></span><br><span class="line">    <span class="built_in">console</span>.log(options.scene);</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="title">onShow</span>(<span class="params">options</span>)</span> &#123;</span><br><span class="line">  <span class="comment">// 这里也可以获取场景值</span></span><br><span class="line">    <span class="built_in">console</span>.log(options.scene);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol><li>模拟不同场景进入小程序</li></ol><hr><h2 id="生命周期：通过生命周期获取页面跳转参数"><a href="#生命周期：通过生命周期获取页面跳转参数" class="headerlink" title="生命周期：通过生命周期获取页面跳转参数"></a>生命周期：通过生命周期获取页面跳转参数</h2><blockquote><p>通过小程序的页面路径传参，并在目标页面中获取这些参数</p></blockquote><p><strong>概念介绍</strong></p><p>在通过页面路径访问小程序页面时，可在路径中携带<strong>查询字符串</strong>形式的参数，如：</p><p><code>/pages/test1/test1?name=Tom&amp;age=12</code></p><p>然后在该页面js中，可通过生命周期钩子 <code>onLoad</code>的参数获取传入的参数:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onLoad(options)</span><br></pre></td></tr></table></figure><p><code>test-link-a.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  <span class="function"><span class="title">goToPage</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    wx.navigateTo(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;/pages/test-link-b/test-link-b?name=tom&amp;age=18&#x27;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><code>test-link-b.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  <span class="function"><span class="title">onLoad</span>(<span class="params">options</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(options);</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="title">goToPage</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">123</span>);</span><br><span class="line">    wx.redirectTo(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;/pages/test-link-c/test-link-c&#x27;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>小程序常用API</title>
      <link href="/blog/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8API/"/>
      <url>/blog/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8API/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="小程序-API：介绍"><a href="#小程序-API：介绍" class="headerlink" title="小程序 API：介绍"></a>小程序 API：介绍</h2><blockquote><p> 了解小程序 API 的功能和形式</p></blockquote><p>API 文档地址：<a href="https://developers.weixin.qq.com/miniprogram/dev/api/">https://developers.weixin.qq.com/miniprogram/dev/api/</a></p><p><strong>概念介绍</strong></p><p>小程序 API 提供了很多功能，如：路由导航、显示弹框等、网络请求、文件操作、设备信息、地理定位、本地存储等等。<br>小程序 API 都放在全局对象 <code>wx</code> 中，并分同步和异步两种：</p><ol><li>方法名以 <code>Sync</code> 结尾的是同步 API</li><li>其他均为异步 API</li></ol><h2 id="31-小程序-API：网络相关"><a href="#31-小程序-API：网络相关" class="headerlink" title="31-小程序 API：网络相关"></a>31-小程序 API：网络相关</h2><blockquote><p>了解发起网络请求的 API</p></blockquote><p><strong>概念介绍</strong></p><ol><li>wx.request 发起网络请求</li></ol><p>【注意】</p><ul><li><p>在调用一个域名上的接口时，要先在<a href="https://mp.weixin.qq.com/wxamp/devprofile/get_profile?token=808612705&amp;lang=zh_CN">小程序管理后台</a>中<br><strong>配置域名白名单</strong>，即允许小程序调用该域名下的接口, 然后<br><strong>关闭项目, 重新启动</strong></p></li><li><p>在本地开发时，也可在开发者工具中设置不检查域名(临时)</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">hot</span>: []</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">getHotMovies</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;https://wx.maoyan.com/mmdb/movie/v2/list/hot.json&#x27;</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">limit</span>: <span class="number">12</span>,</span><br><span class="line">        <span class="attr">offset</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">ct</span>: <span class="string">&#x27;上海&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 成功的回调(箭头函数解决this问题)</span></span><br><span class="line">      <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res);</span><br><span class="line">        <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">          <span class="attr">hot</span>: res.data.data.hot</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">complete</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;请求结束了&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;button bind:tap=<span class="string">&quot;getHotMovies&quot;</span>&gt;获取热门电影&lt;/button&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;hot&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;id&quot;</span>&gt;</span>&#123;&#123;item.nm&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="32-小程序-API：界面相关"><a href="#32-小程序-API：界面相关" class="headerlink" title="32-小程序 API：界面相关"></a>32-小程序 API：界面相关</h2><blockquote><p>了解界面弹窗相关的API</p></blockquote><p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/">https://developers.weixin.qq.com/miniprogram/dev/api/</a></p><p><strong>概念介绍</strong></p><ol><li>wx.showLoading / wx.hideLoading：显示/隐藏加载框</li><li>wx.showModal：显示确认框</li><li>wx.showToast：显示提示框</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">wx.showLoading(&#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;正在加载中...&#x27;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">wx.hideLoading()</span><br><span class="line"></span><br><span class="line">wx.showModal(&#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;弹出框标题&#x27;</span>,</span><br><span class="line">  <span class="attr">content</span>: <span class="string">&#x27;正文&#x27;</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">success</span>: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">fail</span>: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">wx.showToast(&#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;这是一条提示&#x27;</span>,</span><br><span class="line">  <span class="attr">icon</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">  <span class="attr">duration</span>: <span class="number">3000</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="33-小程序-API：媒体相关"><a href="#33-小程序-API：媒体相关" class="headerlink" title="33-小程序 API：媒体相关"></a>33-小程序 API：媒体相关</h2><blockquote><p>了解图片选择和图片展示相关的API</p></blockquote><p><strong>概念介绍</strong></p><ol><li>wx.chooseImage：从手机相册选择照片，或使用手机相机拍照（已弃用）</li><li>wx.chooseMedia：从手机相册选择照片，或使用手机相机拍照（目前正在使用）</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">chooseImage</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    wx.chooseImage(&#123;</span><br><span class="line">      <span class="attr">count</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">sizeType</span>: [<span class="string">&#x27;compressed&#x27;</span>, <span class="string">&#x27;original&#x27;</span>],</span><br><span class="line">      <span class="attr">sourceType</span>: [<span class="string">&#x27;album&#x27;</span>, <span class="string">&#x27;camera&#x27;</span>],</span><br><span class="line"></span><br><span class="line">      <span class="attr">success</span>: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res);</span><br><span class="line">        <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">          <span class="attr">path</span>: res.tempFilePaths[<span class="number">0</span>]</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      <span class="attr">fail</span>: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      <span class="attr">complete</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;操作结束!&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;button bind:tap=<span class="string">&quot;chooseImage&quot;</span>&gt;选择图片&lt;/button&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;path&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>形成小程序基本认知;  掌握基本语法</p><h2 id="01-小程序api预览图片"><a href="#01-小程序api预览图片" class="headerlink" title="01-小程序api预览图片"></a>01-小程序api预览图片</h2><ul><li>wx.previewImage：图片预览展示（只能预览网络图片，不能是本地图片）</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button bind:tap=<span class="string">&quot;previewImage&quot;</span>&gt;预览图片&lt;/button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  <span class="function"><span class="title">previewImage</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    wx.previewImage(&#123;</span><br><span class="line">      <span class="attr">urls</span>: [</span><br><span class="line">        <span class="string">&#x27;https://img1.baidu.com/it/u=2371210194,1495988968&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=500&amp;h=500&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://img0.baidu.com/it/u=2705683877,4119372584&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=500&amp;h=500&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://img2.baidu.com/it/u=4134461600,792106990&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=500&amp;h=500&#x27;</span></span><br><span class="line">      ],</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="02-小程序api上传文件"><a href="#02-小程序api上传文件" class="headerlink" title="02-小程序api上传文件"></a>02-小程序api上传文件</h2><ul><li><a href="https://developers.weixin.qq.com/miniprogram/dev/api/network/upload/wx.uploadFile.html">wx.uploadFile</a><ul><li>发起一个post请求</li></ul></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button bind:tap=<span class="string">&quot;uploadImage&quot;</span>&gt;上传图片&lt;/button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  <span class="function"><span class="title">uploadImage</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    wx.chooseImage(&#123;</span><br><span class="line">      <span class="attr">count</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">sizeType</span>: [<span class="string">&#x27;compressed&#x27;</span>, <span class="string">&#x27;original&#x27;</span>],</span><br><span class="line">      <span class="attr">sourceType</span>: [<span class="string">&#x27;album&#x27;</span>, <span class="string">&#x27;camera&#x27;</span>],</span><br><span class="line">      <span class="attr">success</span>: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res);</span><br><span class="line">        <span class="keyword">const</span> path = res.tempFilePaths[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        wx.uploadFile(&#123;</span><br><span class="line">          <span class="attr">filePath</span>: path,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;file&#x27;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&#x27;http://localhost:3000/api/upload&#x27;</span>,</span><br><span class="line">          <span class="attr">success</span>: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(res);</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">fail</span>: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(err);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">fail</span>: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>注意: </p><ol><li>可以<strong>临时启用</strong> 不校验合法域名</li><li>上传到的本地服务器代码在<code>资源/myserver3</code>中, 安装依赖, <code>node server.js</code></li><li>上传成功的图片在upload文件夹中</li></ol><h2 id="03-小程序-API：路由相关"><a href="#03-小程序-API：路由相关" class="headerlink" title="03-小程序 API：路由相关"></a>03-小程序 API：路由相关</h2><blockquote><p>了解编程式路由相关的API</p></blockquote><p><strong>概念介绍</strong></p><ol><li>wx.navigateTo：跳转到应用内的某个页面，不能跳到 tabbar 页面 （push）</li><li><p>wx.redirectTo：重定向的方式跳转到应用内的某个页面，不能跳到 tabbar 页面（replace）<br>A B C<br>A =&gt; C</p></li><li><p>wx.switchTab：跳转到 tabBar 页面(<em>自己测试一下</em>)</p></li></ol><p><code>test-link-a.wxml</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;view&gt;A页面&lt;/view&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bind:tap</span>=<span class="string">&quot;goToPage&quot;</span>&gt;</span>跳转B<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><code>test-link-a.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  <span class="function"><span class="title">goToPage</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    wx.navigateTo(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;/pages/test-link-b/test-link-b&#x27;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><code>test-link-b.wxml</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;view&gt;B页面&lt;/view&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bind:tap</span>=<span class="string">&quot;goToPage&quot;</span>&gt;</span>跳转C<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><code>test-link-b.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  <span class="function"><span class="title">goToPage</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    wx.redirectTo(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;/pages/test-link-c/test-link-c&#x27;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><code>test-link-c.wxml</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view&gt;C页面&lt;/view&gt;</span><br></pre></td></tr></table></figure><h2 id="04-小程序-API：缓存相关"><a href="#04-小程序-API：缓存相关" class="headerlink" title="04-小程序 API：缓存相关"></a>04-小程序 API：缓存相关</h2><blockquote><p>了解本地缓存相关的API<br>localStorage<br><strong>概念介绍</strong></p></blockquote><p>缓存 API 提供了同步和异步版本。在实际开发中的使用原则是：</p><ul><li>如果一次缓存的数据量较大时，推荐使用异步 API</li><li>否则推荐使用同步 API</li></ul><ol><li>setStorage / setStorageSync：设置一个缓存数据</li><li>getStorage / getStorageSync：获取一个缓存数据</li><li>removeStorage / removeStorageSync：删除一个缓存数据</li><li>clearStorage / clearStorageSync：清空所有缓存数据</li><li>getStorageInfo / getStorageInfoSync：获取缓存状态信息</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;button bind:tap=<span class="string">&quot;setStorage&quot;</span>&gt;设置&lt;/button&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bind:tap</span>=<span class="string">&quot;getStorage&quot;</span>&gt;</span>获取<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bind:tap</span>=<span class="string">&quot;removeStorage&quot;</span>&gt;</span>移除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bind:tap</span>=<span class="string">&quot;clearStorage&quot;</span>&gt;</span>清空<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bind:tap</span>=<span class="string">&quot;getStorageInfo&quot;</span>&gt;</span>获取存储信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  <span class="function"><span class="title">setStorage</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="comment">// wx.setStorageSync(&#x27;token&#x27;, &#x27;adadfasdfasdfgfdsgdfsg&#x27;)</span></span><br><span class="line"></span><br><span class="line">    wx.setStorage(&#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&#x27;token&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: <span class="string">&#x27;xxxxxxxxxxxxxxxxxxxx&#x27;</span>,</span><br><span class="line">      <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">getStorage</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(wx.getStorageSync(<span class="string">&#x27;token&#x27;</span>));</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">removeStorage</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    wx.removeStorageSync(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">clearStorage</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    wx.clearStorageSync()</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">getStorageInfo</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(wx.getStorageInfoSync());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
